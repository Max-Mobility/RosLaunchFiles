
<launch>

  <!-- Multiple Cameras -->
  <arg name="num_cameras"     default="3"/>
  <arg name="camera_manager"  default="camera_nodelet_manager"/>
  <arg name="camera1"         default="camera1"/>
  <arg name="camera2"         default="camera2"/>
  <arg name="camera3"         default="camera3"/> 
  <arg name="camera4"         default="camera4"/>    

  
  <!-- Localization-only mode -->
  <arg name="localization"            default="false"/>
  
  
  <arg name="frame_id"                default="base_link"/>     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="odom_frame_id"           default=""/>                <!-- If set, TF is used to get odometry instead of the topic -->
  <arg name="map_frame_id"            default="map"/>
  <arg name="ground_truth_frame_id"   default=""/>     <!-- e.g., "world" -->
  <arg name="ground_truth_base_frame_id" default=""/>  <!-- e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->
  <arg name="namespace"               default="rtabmap"/>
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="queue_size"              default="50"/>
  <arg name="wait_for_transform"      default="0.2"/>
  <arg name="args"                    default=""/>              <!-- delete_db_on_start, udebug -->
  <arg name="rtabmap_args"            default="$(arg args)"/>   <!-- deprecated, use "args" argument -->
  <arg name="launch_prefix"           default=""/>              <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
  <arg name="output"                  default="screen"/>        <!--Control node output (screen or log)-->

  
  <!-- if timestamps of the input topics are synchronized using approximate or exact time policy-->
  <arg name="approx_sync"  default="true"/>         
  
  <!-- RGB-D related topics -->
  <arg name="rgb_topic"               default="/camera/rgb/image_rect_color" />
  <arg name="depth_topic"             default="/camera/depth_registered/image_raw" />
  <arg name="camera_info_topic"       default="/camera/rgb/camera_info" />
  
  <!-- Already synchronized RGB-D related topic, with rtabmap_ros/rgbd_sync nodelet -->
  <arg name="subscribe_rgbd"          default="true"/>
  
  <arg name="compressed"              default="false"/>         <!-- If you want to subscribe to compressed image topics -->
  <arg name="rgb_image_transport"     default="compressed"/>    <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="depth_image_transport"   default="compressedDepth"/>  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  
  <arg name="visual_odometry"          default="false"/>          <!-- Launch rtabmap visual odometry node -->
  <arg name="odom_topic"               default="/odom"/>         <!-- Odometry topic used if visual_odometry is false -->
  <arg name="vo_frame_id"              default="odom"/>
  <arg name="odom_tf_angular_variance" default="1"/>             <!-- If TF is used to get odometry, this is the default angular variance -->
  <arg name="odom_tf_linear_variance"  default="1"/>             <!-- If TF is used to get odometry, this is the default linear variance -->
  <arg name="odom_args"                default="$(arg rtabmap_args)"/>
  <arg name="odom_sensor_sync"         default="false"/>
  
  <arg name="subscribe_user_data"      default="false"/>             <!-- user data synchronized subscription -->
  <arg name="user_data_topic"          default="/user_data"/>
  <arg name="user_data_async_topic"    default="/user_data_async" /> <!-- user data async subscription (rate should be lower than map update rate) -->
  
  <!-- These arguments should not be modified directly, see referred topics without "_relay" suffix above -->
  <arg if="$(arg compressed)"     name="rgb_topic_relay"           default="$(arg rgb_topic)_relay"/>
  <arg unless="$(arg compressed)" name="rgb_topic_relay"           default="$(arg rgb_topic)"/>
  <arg if="$(arg compressed)"     name="depth_topic_relay"         default="$(arg depth_topic)_relay"/>
  <arg unless="$(arg compressed)" name="depth_topic_relay"         default="$(arg depth_topic)"/>


  <!-- Nodes -->

  <!-- sync rgb/depth images per camera -->
  <group ns="$(arg camera1)">
    <node pkg="nodelet" type="nodelet" name="$(arg camera1)_rgbd_sync" args="load rtabmap_ros/rgbd_sync /$(arg camera_manager)">
      <remap from="depth/image" to="depth_registered/sw_registered/image_rect_raw"/>
      <remap from="rgb/image" to="rgb/image_rect_color"/>
    </node>
  </group>

  <group ns="$(arg camera2)">
    <node pkg="nodelet" type="nodelet" name="$(arg camera2)_rgbd_sync" args="load rtabmap_ros/rgbd_sync /$(arg camera_manager)">
      <remap from="depth/image" to="depth_registered/sw_registered/image_rect_raw"/>
      <remap from="rgb/image" to="rgb/image_rect_color"/>
    </node>
  </group>
  
  <group ns="$(arg camera3)">
    <node pkg="nodelet" type="nodelet" name="$(arg camera3)_rgbd_sync" args="load rtabmap_ros/rgbd_sync /$(arg camera_manager)">
      <remap from="depth/image" to="depth_registered/sw_registered/image_rect_raw"/>
      <remap from="rgb/image" to="rgb/image_rect_color"/>
    </node>
  </group> 

  <group ns="$(arg camera4)">
  <!--  <node pkg="nodelet" type="nodelet" name="$(arg camera4)_rgbd_sync" args="load rtabmap_ros/rgbd_sync /$(arg camera_manager)">
      <remap from="depth/image" to="depth_registered/sw_registered/image_rect_raw"/>
      <remap from="rgb/image" to="rgb/image_rect_color"/>
    </node>-->
  </group>  

  <!-- RTABMAP STUFF -->
  <group ns="$(arg namespace)">
    
    <!-- RGB-D Odometry -->
      <node if="$(arg compressed)" name="republish_rgb" type="republish" pkg="image_transport" args="$(arg rgb_image_transport) in:=$(arg rgb_topic) raw out:=$(arg rgb_topic_relay)" />
      <node if="$(arg compressed)" name="republish_depth" type="republish" pkg="image_transport" args="$(arg depth_image_transport) in:=$(arg depth_topic) raw out:=$(arg depth_topic_relay)" />
      
      <node if="$(arg visual_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="$(arg output)" args="$(arg odom_args)" launch-prefix="$(arg launch_prefix)">
        <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
        <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
        <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
        
        <remap from="rgbd_image0"     to="/$(arg camera1)/rgbd_image"/>
	<remap from="rgbd_image1"     to="/$(arg camera2)/rgbd_image"/>
	<remap from="rgbd_image2"     to="/$(arg camera3)/rgbd_image"/> 	
	<remap from="rgbd_image3"     to="/$(arg camera4)/rgbd_image"/> 	

	
        <param name="frame_id"                    type="string" value="$(arg frame_id)"/>
        <param name="odom_frame_id"               type="string" value="$(arg vo_frame_id)"/>
        <param name="ground_truth_frame_id"       type="string" value="$(arg ground_truth_frame_id)"/>
        <param name="ground_truth_base_frame_id"  type="string" value="$(arg ground_truth_base_frame_id)"/>
        <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
        <param name="approx_sync"                 type="bool"   value="$(arg approx_sync)"/>
        <param name="config_path"                 type="string" value="$(arg cfg)"/>
        <param name="queue_size"                  type="int"    value="$(arg queue_size)"/>
        <param name="subscribe_rgbd"              type="bool"   value="$(arg subscribe_rgbd)"/>
        <param name="rgbd_cameras"                type="int"    value="$(arg num_cameras)"/>
	<param name="Vis/EstimationType"          type="string" value="0"/> <!-- should be 0 for multi-camera -->
      </node>
    
    <!-- Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="$(arg output)" args="$(arg rtabmap_args)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth"  type="bool" value="false"/>
      <param name="subscribe_rgbd"  type="bool" value="$(arg subscribe_rgbd)"/>
      <param name="subscribe_scan"       type="bool"   value="false"/>
      <param name="subscribe_scan_cloud" type="bool"   value="false"/>
      <param name="subscribe_user_data"  type="bool"   value="$(arg subscribe_user_data)"/>
      <param name="frame_id"             type="string" value="$(arg frame_id)"/>
      <param name="map_frame_id"         type="string" value="$(arg map_frame_id)"/>
      <param name="odom_frame_id"        type="string" value="$(arg odom_frame_id)"/>
      <param name="ground_truth_frame_id"       type="string" value="$(arg ground_truth_frame_id)"/>
      <param name="ground_truth_base_frame_id"  type="string" value="$(arg ground_truth_base_frame_id)"/>
      <param name="odom_tf_angular_variance" type="double" value="$(arg odom_tf_angular_variance)"/>
      <param name="odom_tf_linear_variance"  type="double" value="$(arg odom_tf_linear_variance)"/>
      <param name="odom_sensor_sync"         type="bool"   value="$(arg odom_sensor_sync)"/>
      <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
      <param name="database_path"        type="string" value="$(arg database_path)"/>
      <param name="approx_sync"          type="bool"   value="$(arg approx_sync)"/>
<!--      <param name="config_path"          type="string" value="$(arg cfg)"/> -->
      <param name="queue_size"           type="int" value="$(arg queue_size)"/>
      <param name="rgbd_cameras"                type="int"    value="$(arg num_cameras)"/>
      
      <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      
      <remap from="rgbd_image0"     to="/$(arg camera1)/rgbd_image"/>
      <remap from="rgbd_image1"     to="/$(arg camera2)/rgbd_image"/> 
      <remap from="rgbd_image2"     to="/$(arg camera3)/rgbd_image"/> 	
      <remap from="rgbd_image3"     to="/$(arg camera4)/rgbd_image"/> 

      <param name="Vis/EstimationType"          type="string" value="0"/> <!-- should be 0 for multi-camera -->
      
      <remap from="user_data"              to="$(arg user_data_topic)"/>
      <remap from="user_data_async"        to="$(arg user_data_async_topic)"/>
      <remap unless="$(arg visual_odometry)" from="odom"  to="$(arg odom_topic)"/>
      
      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node> 

  </group>

  

</launch>
